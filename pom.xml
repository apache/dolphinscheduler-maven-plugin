<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>21</version>
    </parent>

    <groupId>org.apache.dolphinscheduler</groupId>
    <artifactId>dolphinscheduler-maven-plugin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>takari-maven-plugin</packaging>

    <name>dolphinscheduler-maven-plugin</name>
    <url>http://dolphinscheduler.apache.org</url>
    <description>Dolphin Scheduler Maven Plugin provides a packing and lifecycle for DolphinScheduler plugins
    </description>
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/apache/incubator-dolphinscheduler-maven-plugin.git</connection>
        <developerConnection>scm:git:https://github.com/apache/incubator-dolphinscheduler-maven-plugin.git</developerConnection>
        <url>https://github.com/apache/incubator-dolphinscheduler-maven-plugin</url>
        <tag>HEAD</tag>
    </scm>
    <mailingLists>
        <mailingList>
            <name>DolphinScheduler Developer List</name>
            <post>dev@dolphinscheduler.incubator.apache.org</post>
            <subscribe>dev-subscribe@dolphinscheduler.incubator.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@dolphinscheduler.incubator.apache.org</unsubscribe>
        </mailingList>
    </mailingLists>

    <properties>
        <mavenVersion>3.2.3</mavenVersion>
        <mavenPluginPluginVersion>3.2</mavenPluginPluginVersion>
        <provisioVersion>1.0.7</provisioVersion>
        <takari.javaSourceVersion>1.8</takari.javaSourceVersion>
        <takariLifecycleVersion>1.11.9</takariLifecycleVersion>
        <takari.licenseHeader>http://takari.io/support/license-header.txt</takari.licenseHeader>
        <takari.lifecycleVersion>1.13.7</takari.lifecycleVersion>
        <takari.sourceJar>true</takari.sourceJar>
        <takari.testJar>false</takari.testJar>
        <takari.compilerId>jdt</takari.compilerId>
        <takari.annotationProcessing>none</takari.annotationProcessing>
        <takari.transitiveDependencyReference>error</takari.transitiveDependencyReference>
        <takari.privatePackageReference>error</takari.privatePackageReference>
        <skipTests>true</skipTests>
        <surefire.version>2.22.0</surefire.version>
        <maven.compiler.source>${takari.javaSourceVersion}</maven.compiler.source>
        <maven.compiler.target>${takari.javaSourceVersion}</maven.compiler.target>
    </properties>

    <prerequisites>
        <maven>[3.2.1,)</maven>
    </prerequisites>

    <dependencies>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>${mavenVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugin-tools</groupId>
            <artifactId>maven-plugin-annotations</artifactId>
            <version>${mavenPluginPluginVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-core</artifactId>
            <version>${mavenVersion}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-api</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>3.0.17</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-artifact</artifactId>
            <version>${mavenVersion}</version>
        </dependency>

        <!-- for testing -->
        <dependency>
            <groupId>io.takari.maven.plugins</groupId>
            <artifactId>takari-plugin-testing</artifactId>
            <version>2.9.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.takari.maven.plugins</groupId>
            <artifactId>takari-plugin-integration-testing</artifactId>
            <version>2.9.1</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.15.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>io.takari.maven.plugins</groupId>
                <artifactId>takari-lifecycle-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- set versions/configuration of common plugins for reproducibility, ordered alphabetically -->
                <plugin>
                    <groupId>io.takari.maven.plugins</groupId>
                    <artifactId>takari-lifecycle-plugin</artifactId>
                    <version>${takariLifecycleVersion}</version>
                    <configuration>
                        <!-- compile/testCompile -->
                        <source>${takari.javaSourceVersion}</source>
                        <compilerId>${takari.compilerId}</compilerId>
                        <transitiveDependencyReference>${takari.transitiveDependencyReference}</transitiveDependencyReference>
                        <privatePackageReference>${takari.privatePackageReference}</privatePackageReference>
                        <proc>${takari.annotationProcessing}</proc>
                        <!-- jar -->
                        <sourceJar>${takari.sourceJar}</sourceJar>
                        <testJar>${takari.testJar}</testJar>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skip>true</skip>
                        <skipMain>true</skipMain>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-docck-plugin</artifactId>
                    <version>1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <!-- START SNIPPET: release-plugin-configuration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <localCheckout>true</localCheckout>
                        <pushChanges>false</pushChanges>
                        <useReleaseProfile>false</useReleaseProfile>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <goals>deploy</goals>
                        <arguments>--batch-mode -Ptakari-release</arguments>
                    </configuration>
                </plugin>
                <!-- END SNIPPET: release-plugin-configuration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.9.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ssh</artifactId>
                            <version>3.1.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <!-- disable accidental use, must use takari-lifecycle -->
                        <skipSource>true</skipSource>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>1.16</version>
                    <configuration>
                        <signature>
                            <groupId>org.codehaus.mojo.signature</groupId>
                            <artifactId>java18</artifactId>
                            <version>1.0</version>
                        </signature>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check-java-api-usage</id>
                            <phase>test</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <aggregate>true</aggregate>
                        <strictCheck>true</strictCheck>
                        <header>${takari.licenseHeader}</header>
                        <useDefaultExcludes>false</useDefaultExcludes>
                        <includes>
                            <include>**/pom.xml</include>
                            <include>**/*.xml</include>
                            <include>**/*.xsd</include>
                            <include>**/*.xjb</include>
                            <include>**/*.mdo</include>
                            <include>**/*.properties</include>
                            <include>**/*.java</include>
                            <include>**/*.groovy</include>
                            <include>**/*.scala</include>
                            <include>**/*.aj</include>
                            <include>**/*.js</include>
                            <include>**/*.css</include>
                        </includes>
                        <excludes>
                            <exclude>**/target/**</exclude>
                            <exclude>**/conf/**</exclude>
                            <exclude>**/.*</exclude>
                            <exclude>**/pkg/**</exclude>
                            <exclude>**/.idea/**</exclude>
                            <exclude>**/release.properties</exclude>
                            <exclude>**/pom.xml.releaseBackup</exclude>
                            <exclude>release.sh</exclude>
                            <exclude>**/src/test/**</exclude>
                        </excludes>
                        <mapping>
                            <scala>JAVADOC_STYLE</scala>
                            <xjb>XML_STYLE</xjb>
                            <mdo>XML_STYLE</mdo>
                        </mapping>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>io.tesla.maven.plugins</groupId>
                                        <artifactId>tesla-license-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>